name: 'TerraformGithubActions'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
 runSH:
    name: Run remote backend script
           
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Run  remote backend script 
        run: sh ./remote.sh
        
 go-tests:
    name: Run Go Unit Tests
    needs:  runSH
    env:
           ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID}}
           ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
           ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
           
           
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
    
      - name: Download Go Modules
        working-directory: test
        run: go mod download
        
    
        
      - name: Login via Az module
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true 

      - name: Run Go Tests

           
        working-directory: test
        run: go test -v 
        
        
 terraform:
    needs:  go-tests
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

  

    - name: Terraform Plan
      id: plan
      run: terraform plan -detailed-exitcode -input=false -out=plan.out
      continue-on-error: true

    - name: Terraform Apply
      id: apply
      if: steps.plan.outputs.exitcode == 2
      run: terraform apply -auto-approve

